// default config file for ndnrtc

// basic information:

// general parameters
general ={
    log_level = "all";  // all, debug, stat, default, none
    log_file = "ndnrtc.log";
    use_tlv = true; // [true | false] -- determines, whether the library should use TLV encoding
    use_rtx = true; // [true | false] -- reissue timedout interests (late data cases)
    use_fec = true; // [true | false] -- use Forward Error Correction
    use_cache = true; // [true | false] -- use in-memory content cache for producer
    use_avsync = true; // [true | false] -- enable synchronization between audio/video streams
    skip_incomplete = true; // [true | false] -- indicates, whether incomplete frames should be skipped for playback
    
    ndnnetwork ={
        connect_host = "localhost";
        connect_port = 6363;
    };
};

// configuration for streams that will be fetched
consume={
    basic = {
        audio = {
            interest_lifetime = 2000; // in millisecond
            jitter_size = 300; // minimal jitter buffer size in milliseconds
            buffer_size = 150; // assembling buffer size
            slot_size = 16000; // frame buffer's slot size (for assembling frames fetched from network)
        };
        video = {
            interest_lifetime = 2000;
            jitter_size = 300; // minimal jitter buffer size in milliseconds
            buffer_size = 150; // assembling buffer size
            slot_size = 16000; // frame buffer's slot size (for assembling frames fetched from network)
        };
        stat = ({
            name="buffer.stat";
            statistics= ("buf est","buf tar","buf play");
        },
        {
            name="playback.stat";
            statistics= ("skipped no","incomplete","total");
        });
    };

    streams = ({
        type = "video";// [video | audio] 
        session_prefix = "/ndn/edu/ucla/remap/ndnrtc/user/freeculture";
        name = "video";// video name
        thread_to_fetch = "mid";// should be the name of one thread in this stream
        segment_size = 1000;// in Byte
        sink = "video.yuv"; // this will be a file that will store fetched decoded video stream
        thread = ({
            name = "mid";
            average_segnum_delta = 5;
            average_segnum_delta_parity = 2;
            average_segnum_key = 30;
            average_segnum_key_parity = 5
            coder = {
                frame_rate = 30;
                gop = 30;//group of picture
                start_bitrate = 1000;
                max_bitrate = 10000;
                encode_height = 405;
                encode_width = 720;
            };
        },
        {
            name = "hi";
            average_segnum_delta = 5;
            average_segnum_delta_parity = 2;
            average_segnum_key = 30;
            average_segnum_key_parity = 6
            coder = {
                frame_rate = 30;
                gop = 30;//group of picture
                start_bitrate = 1000;
                max_bitrate = 10000;
                encode_height = 720;
                encode_width = 1080;
            };
        });
    },
    {
        type = "video";// [video | audio] 
        session_prefix = "/ndn/edu/ucla/remap/ndnrtc/user/u";
        name = "camera";// video name
        thread_to_fetch = "mid";// should be the name of one thread in this stream
        segment_size = 1000;// in Byte
        sink = "video.yuv"; // this will be a file that will store fetched decoded video stream
        thread = ({
            name = "mid";
            average_segnum_delta = 5;
            average_segnum_delta_parity = 2;
            average_segnum_key = 30;
            average_segnum_key_parity = 5
            coder = {
                frame_rate = 30;
                gop = 30;//group of picture
                start_bitrate = 1000;
                max_bitrate = 10000;
                encode_height = 405;
                encode_width = 720;
            };
        },
        {
            name = "low";
            average_segnum_delta = 5;
            average_segnum_delta_parity = 2;
            average_segnum_key = 30;
            average_segnum_key_parity = 3
            coder = {
                frame_rate = 30;
                gop = 30;//group of picture
                start_bitrate = 300;
                max_bitrate = 10000;
                encode_height = 720;
                encode_width = 1080;
            };
        });
    },
    {
        type = "audio";
        session_prefix = "/ndn/edu/ucla/remap/ndnrtc/user/freeculture";
        name = "sound";// audio name
        thread_to_fetch = "pcmu";// should be the name of one thread in this stream
        sink = "audio.wav"; // this will be a file that will store fetched decoded audio stream
        segment_size = 1000;// in Byte
        thread = ({
            name = "pcmu";
        },
        {
            name = "pcma";
        });
    },
    {
        type = "audio";
        session_prefix = "/ndn/edu/ucla/remap/ndnrtc/user/u";
        name = "sound";// audio name
        thread_to_fetch = "pcmu";// should be the name of one thread in this stream
        sink = "audio.wav"; // this will be a file that will store fetched decoded audio stream
        segment_size = 1000;// in Byte
        thread = ({
            name = "pcmu";
        },
        {
            name = "opus";
        });
    });
};